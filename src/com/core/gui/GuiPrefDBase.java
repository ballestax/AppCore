/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.core.gui;

import com.core.Aplication;
import com.core.Configuration;
import java.awt.Color;
import java.io.File;
import java.util.Properties;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author ballestax
 */
public class GuiPrefDBase extends JPanel {

    private Aplication app;
    private boolean testConexion;
    private String baseDatos;

    private static final String MYSQL = "MySql";
    private static final String SQLITE = "SQLite";

    /**
     * Creates new form GuiPrefDBase
     */
    public GuiPrefDBase(Aplication app) {
        this.app = app;
        initComponents();
        jLabel2.setText("");
        cbDriver.addItem(MYSQL);
        cbDriver.addItem(SQLITE);
        String URL_DEF = app.getUserHome() + File.separator + Aplication.DATABASE;
        baseDatos = app.getConfiguration().getProperty(Configuration.DATABASE_URL, URL_DEF);
        tfDBFile.setText(baseDatos);

        jButton1.setVisible(false);
        btDefecto.setVisible(false);
        testConexion = false;
        btBuscar.setVisible(false);
        tfDBFile.setVisible(false);
    }

    public void mostrarBotones(boolean mostrar) {
        jButton1.setVisible(mostrar);
        btDefecto.setVisible(mostrar);
        btAplicar.setVisible(mostrar);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbDatabase = new javax.swing.JLabel();
        tfDBFile = new javax.swing.JTextField();
        btBuscar = new javax.swing.JButton();
        btTest = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        btDefecto = new javax.swing.JButton();
        cbDriver = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        btAplicar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        lbUrl = new javax.swing.JLabel();
        tfUrl = new javax.swing.JTextField();
        lbUser = new javax.swing.JLabel();
        tfUser = new javax.swing.JTextField();
        lbPassword = new javax.swing.JLabel();
        pfPassword = new javax.swing.JPasswordField();

        lbDatabase.setText("Base de Datos:");

        tfDBFile.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                tfDBFileCaretUpdate(evt);
            }
        });

        btBuscar.setText("Buscar");
        btBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBuscarActionPerformed(evt);
            }
        });

        btTest.setText("Test Conexion");
        btTest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btTestActionPerformed(evt);
            }
        });

        jLabel2.setText("jLabel2");

        btDefecto.setText("Por Defecto");
        btDefecto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDefectoActionPerformed(evt);
            }
        });

        cbDriver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbDriverActionPerformed(evt);
            }
        });

        jLabel3.setText("Driver:");

        btAplicar.setText("Aplicar");
        btAplicar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAplicarActionPerformed(evt);
            }
        });

        jButton1.setText("Limpiar Base de Datos");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        lbUrl.setText("Url:");

        tfUrl.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                tfUrlCaretUpdate(evt);
            }
        });

        lbUser.setText("Usuario:");

        tfUser.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                tfUserCaretUpdate(evt);
            }
        });

        lbPassword.setText("Contrase√±a:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btDefecto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btAplicar))
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btTest)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lbPassword)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pfPassword))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lbUser)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tfUser))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lbUrl)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tfUrl))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbDatabase)
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tfDBFile, javax.swing.GroupLayout.DEFAULT_SIZE, 275, Short.MAX_VALUE)
                                    .addComponent(cbDriver, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btBuscar)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {lbDatabase, lbPassword, lbUrl, lbUser});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbDriver, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbDatabase)
                    .addComponent(tfDBFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btBuscar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbUrl)
                    .addComponent(tfUrl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbUser)
                    .addComponent(tfUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbPassword)
                    .addComponent(pfPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btTest)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btDefecto)
                    .addComponent(btAplicar))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBuscarActionPerformed
        JFileChooser fc = new JFileChooser();
        fc.setFileSelectionMode(JFileChooser.FILES_ONLY);
        fc.setSelectedFile(new File(app.getUserHome()));
        int opc = fc.showOpenDialog(this);
        if (opc == JFileChooser.APPROVE_OPTION) {
            File file = fc.getSelectedFile();
            if (file != null) {
                tfDBFile.setText(file.getPath());
            }
        }
    }//GEN-LAST:event_btBuscarActionPerformed

    private void btTestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btTestActionPerformed
        testConexion();
    }//GEN-LAST:event_btTestActionPerformed

    private void btAplicarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAplicarActionPerformed
        testConexion();
        if (testConexion) {
            if (cbDriver.getSelectedItem().equals(MYSQL)) {                
                app.getConfiguration().setProperty(Configuration.DATABASE_DRIVER, "org.mariadb.jdbc.Driver");
                app.getConfiguration().setProperty(Configuration.DATABASE_PREFIJO, "jdbc:mysql");
                app.getConfiguration().setProperty(Configuration.DATABASE_URL, tfUrl.getText());
                app.getConfiguration().setProperty(Configuration.DATABASE_USER, tfUser.getText());
                app.getConfiguration().setProperty(Configuration.DATABASE_PASSWORD, new String(pfPassword.getPassword()));
            } else if (cbDriver.getSelectedItem().equals(SQLITE)) {
                app.getConfiguration().setProperty(Configuration.DATABASE_DRIVER, "org.sqlite.JDBC");
                app.getConfiguration().setProperty(Configuration.DATABASE_PREFIJO, "jdbc:sqlite");
                app.getConfiguration().setProperty(Configuration.DATABASE_URL, tfDBFile.getText());
                app.getConfiguration().setProperty(Configuration.DATABASE_USER, "");
                app.getConfiguration().setProperty(Configuration.DATABASE_PASSWORD, "");                
            }
            getRootPane().getParent().setVisible(false);
        } else {
            app.getGuiManager().showError("Debe establecer una conexion para continuar, \n"
                    + "o reestablecer la conexion por defecto");
        }

    }//GEN-LAST:event_btAplicarActionPerformed

    private void btDefectoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDefectoActionPerformed
        String msg = "Este accion restablecera los valores por defecto.";
        int opc = JOptionPane.showConfirmDialog(this, msg, "Reestablecer valores", JOptionPane.OK_CANCEL_OPTION);
        if (opc == JOptionPane.OK_OPTION) {
            tfDBFile.setText(app.getUserHome() + File.separator + Aplication.DATABASE);
        }
    }//GEN-LAST:event_btDefectoActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void tfDBFileCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_tfDBFileCaretUpdate
        // TODO add your handling code here:
        if (!baseDatos.equals(tfDBFile.getText())) {
            testConexion = false;
        }
    }//GEN-LAST:event_tfDBFileCaretUpdate

    private void tfUrlCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_tfUrlCaretUpdate
        // TODO add your handling code here:
    }//GEN-LAST:event_tfUrlCaretUpdate

    private void tfUserCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_tfUserCaretUpdate
        // TODO add your handling code here:
    }//GEN-LAST:event_tfUserCaretUpdate

    private void cbDriverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbDriverActionPerformed
        // TODO add your handling code here:
        if (cbDriver.getSelectedItem().equals(MYSQL)) {
            btBuscar.setVisible(false);
            tfDBFile.setVisible(false);
            lbDatabase.setVisible(false);
            lbUrl.setVisible(true);
            tfUrl.setVisible(true);
            lbUser.setVisible(true);
            tfUser.setVisible(true);
            lbPassword.setVisible(true);
            pfPassword.setVisible(true);

        } else if (cbDriver.getSelectedItem().equals(SQLITE)) {
            btBuscar.setVisible(true);
            tfDBFile.setVisible(true);
            lbDatabase.setVisible(true);
            lbUrl.setVisible(false);
            tfUrl.setVisible(false);
            lbUser.setVisible(false);
            tfUser.setVisible(false);
            lbPassword.setVisible(false);
            pfPassword.setVisible(false);
        }

        /* String url = "jdbc:mysql://127.0.0.1:3306/sample"+"?verifyServerCertificate=false"+"&useSSL=true"+
         "&requireSSL=true";*/
    }//GEN-LAST:event_cbDriverActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAplicar;
    private javax.swing.JButton btBuscar;
    private javax.swing.JButton btDefecto;
    private javax.swing.JButton btTest;
    private javax.swing.JComboBox cbDriver;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel lbDatabase;
    private javax.swing.JLabel lbPassword;
    private javax.swing.JLabel lbUrl;
    private javax.swing.JLabel lbUser;
    private javax.swing.JPasswordField pfPassword;
    private javax.swing.JTextField tfDBFile;
    private javax.swing.JTextField tfUrl;
    private javax.swing.JTextField tfUser;
    // End of variables declaration//GEN-END:variables

    private void testConexion() {
        boolean testDataSource = false;
        String url = "";
        if (cbDriver.getSelectedItem().equals(SQLITE)) {
            url = tfDBFile.getText();
            testDataSource = app.getSqlManager().testDataSourceSQLite(url);
        } else if (cbDriver.getSelectedItem().equals(MYSQL)) {
            url = tfUrl.getText();
            String user = tfUser.getText();
            testDataSource = app.getSqlManager().testDataSourceMySql(url, user, pfPassword.getPassword());
        }
        if (testDataSource) {
            jLabel2.setForeground(Color.green);
            jLabel2.setText("Conexion establecida con exito.");
        } else {
            jLabel2.setForeground(Color.red);
            jLabel2.setText("<html><p>No se pudo establecer la conexion con:</p>"
                    + "<p>" + url + "</p></html>");
        }
        testConexion = testDataSource;
    }

    public Properties getDatos() {
        Properties properties = new Properties();
        properties.put(Configuration.DATABASE_URL, tfDBFile.getText());
        return properties;
    }
}
